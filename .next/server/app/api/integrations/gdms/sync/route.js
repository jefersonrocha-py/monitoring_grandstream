"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/integrations/gdms/sync/route";
exports.ids = ["app/api/integrations/gdms/sync/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&page=%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute.ts&appDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&page=%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute.ts&appDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_jeferson_oliveira_Documents_GitHub_monitoring_grandstream_app_api_integrations_gdms_sync_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/integrations/gdms/sync/route.ts */ \"(rsc)/./app/api/integrations/gdms/sync/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/integrations/gdms/sync/route\",\n        pathname: \"/api/integrations/gdms/sync\",\n        filename: \"route\",\n        bundlePath: \"app/api/integrations/gdms/sync/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\jeferson.oliveira\\\\Documents\\\\GitHub\\\\monitoring_grandstream\\\\app\\\\api\\\\integrations\\\\gdms\\\\sync\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_jeferson_oliveira_Documents_GitHub_monitoring_grandstream_app_api_integrations_gdms_sync_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/integrations/gdms/sync/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZpbnRlZ3JhdGlvbnMlMkZnZG1zJTJGc3luYyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGaW50ZWdyYXRpb25zJTJGZ2RtcyUyRnN5bmMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZpbnRlZ3JhdGlvbnMlMkZnZG1zJTJGc3luYyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqZWZlcnNvbi5vbGl2ZWlyYSU1Q0RvY3VtZW50cyU1Q0dpdEh1YiU1Q21vbml0b3JpbmdfZ3JhbmRzdHJlYW0lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2plZmVyc29uLm9saXZlaXJhJTVDRG9jdW1lbnRzJTVDR2l0SHViJTVDbW9uaXRvcmluZ19ncmFuZHN0cmVhbSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUU7QUFDbEo7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbnRlbm5hX21hcHMvPzUxNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcamVmZXJzb24ub2xpdmVpcmFcXFxcRG9jdW1lbnRzXFxcXEdpdEh1YlxcXFxtb25pdG9yaW5nX2dyYW5kc3RyZWFtXFxcXGFwcFxcXFxhcGlcXFxcaW50ZWdyYXRpb25zXFxcXGdkbXNcXFxcc3luY1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvaW50ZWdyYXRpb25zL2dkbXMvc3luYy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ludGVncmF0aW9ucy9nZG1zL3N5bmNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2ludGVncmF0aW9ucy9nZG1zL3N5bmMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxqZWZlcnNvbi5vbGl2ZWlyYVxcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXG1vbml0b3JpbmdfZ3JhbmRzdHJlYW1cXFxcYXBwXFxcXGFwaVxcXFxpbnRlZ3JhdGlvbnNcXFxcZ2Rtc1xcXFxzeW5jXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9pbnRlZ3JhdGlvbnMvZ2Rtcy9zeW5jL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&page=%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute.ts&appDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/integrations/gdms/sync/route.ts":
/*!*************************************************!*\
  !*** ./app/api/integrations/gdms/sync/route.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var _services_gdms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services/gdms */ \"(rsc)/./services/gdms.ts\");\n// app/api/integrations/gdms/sync/route.ts\n\n\n\nconst runtime = \"nodejs\";\nconst dynamic = \"force-dynamic\";\n/**\r\n * POST /api/integrations/gdms/sync\r\n * - modo full (sem query): descobre/insere/atualiza tudo\r\n * - modo status-only (?mode=status): atualiza apenas status/lastSyncAt (cron 5min)\r\n */ async function POST(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const mode = searchParams.get(\"mode\");\n        const statusOnly = mode === \"status\";\n        const nets = await (0,_services_gdms__WEBPACK_IMPORTED_MODULE_2__.listNetworks)();\n        const now = new Date();\n        let created = 0, updated = 0, statusChanged = 0, totalFetched = 0;\n        const perNetwork = [];\n        const errors = [];\n        for (const n of nets){\n            const aps = await (0,_services_gdms__WEBPACK_IMPORTED_MODULE_2__.listAPsByNetwork)(n.id, n.networkName ?? \"\");\n            perNetwork.push({\n                id: n.id,\n                name: n.networkName ?? \"\",\n                fetched: aps.length\n            });\n            totalFetched += aps.length;\n            for (const ap of aps){\n                try {\n                    const existing = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.antenna.findFirst({\n                        where: {\n                            gdmsApId: ap.apId\n                        },\n                        select: {\n                            id: true,\n                            status: true,\n                            lat: true,\n                            lon: true\n                        }\n                    });\n                    if (statusOnly) {\n                        if (!existing) continue;\n                        const need = existing.status !== ap.status;\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.antenna.update({\n                            where: {\n                                gdmsApId: ap.apId\n                            },\n                            data: {\n                                status: ap.status,\n                                lastSyncAt: now\n                            }\n                        });\n                        updated++;\n                        if (need) {\n                            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.statusHistory.create({\n                                data: {\n                                    antennaId: existing.id,\n                                    status: ap.status\n                                }\n                            });\n                            statusChanged++;\n                        }\n                        continue;\n                    }\n                    const base = {\n                        name: ap.apName,\n                        networkId: ap.networkId,\n                        networkName: ap.networkName,\n                        status: ap.status,\n                        lastSyncAt: now\n                    };\n                    if (existing && existing.lat === 0 && existing.lon === 0) {\n                        if (typeof ap.lat === \"number\") base.lat = ap.lat;\n                        if (typeof ap.lng === \"number\") base.lon = ap.lng;\n                    }\n                    if (!existing) {\n                        const createdRow = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.antenna.create({\n                            data: {\n                                gdmsApId: ap.apId,\n                                ...base,\n                                lat: typeof base.lat === \"number\" ? base.lat : 0,\n                                lon: typeof base.lon === \"number\" ? base.lon : 0\n                            }\n                        });\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.statusHistory.create({\n                            data: {\n                                antennaId: createdRow.id,\n                                status: ap.status\n                            }\n                        });\n                        created++;\n                    } else {\n                        const need = existing.status !== ap.status;\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.antenna.update({\n                            where: {\n                                gdmsApId: ap.apId\n                            },\n                            data: base\n                        });\n                        if (need) {\n                            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.statusHistory.create({\n                                data: {\n                                    antennaId: existing.id,\n                                    status: ap.status\n                                }\n                            });\n                            statusChanged++;\n                        }\n                        updated++;\n                    }\n                } catch (rowErr) {\n                    errors.push({\n                        apId: ap.apId,\n                        reason: rowErr?.message ?? String(rowErr)\n                    });\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ok: errors.length === 0,\n            mode: statusOnly ? \"status\" : \"full\",\n            networks: nets.length,\n            totalFetched,\n            created,\n            updated,\n            statusChanged,\n            perNetwork,\n            errors: errors.slice(0, 50),\n            at: now.toISOString()\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ok: false,\n            error: e?.message ?? String(e)\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/integrations/gdms/sync/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gdmsToken.ts":
/*!**************************!*\
  !*** ./lib/gdmsToken.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forceRefresh: () => (/* binding */ forceRefresh),\n/* harmony export */   getAccessToken: () => (/* binding */ getAccessToken),\n/* harmony export */   getTokenInfo: () => (/* binding */ getTokenInfo),\n/* harmony export */   refreshToken: () => (/* binding */ refreshToken)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n\nconst mem = {\n    token: null\n};\nconst SKEW_MS = 60000; // renova com 1min de antecedência\nfunction now() {\n    return Date.now();\n}\nfunction willExpireSoon(expiresAt, skewMs = SKEW_MS) {\n    return expiresAt <= now() + skewMs;\n}\nasync function loadFromDb() {\n    const row = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.gdmsToken.findUnique({\n        where: {\n            id: 1\n        }\n    }).catch(()=>null);\n    if (!row) return null;\n    return {\n        accessToken: row.accessToken,\n        expiresAt: new Date(row.expiresAt).getTime()\n    };\n}\nasync function saveToDb(tok) {\n    await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.gdmsToken.upsert({\n        where: {\n            id: 1\n        },\n        create: {\n            id: 1,\n            accessToken: tok.accessToken,\n            expiresAt: new Date(tok.expiresAt)\n        },\n        update: {\n            accessToken: tok.accessToken,\n            expiresAt: new Date(tok.expiresAt)\n        }\n    });\n    mem.token = tok; // sincroniza cache\n}\n// === OAuth client_credentials ===\n// Equivalente ao seu curl:\n// curl -X POST \"$GDMS_OAUTH_URL\" \\\n//   -H \"Content-Type: application/x-www-form-urlencoded\" \\\n//   --data \"grant_type=client_credentials&client_id=...&client_secret=...\"\nasync function fetchClientCredentialsToken() {\n    const url = process.env.GDMS_OAUTH_URL;\n    const clientId = process.env.GDMS_CLIENT_ID;\n    const clientSecret = process.env.GDMS_CLIENT_SECRET;\n    if (!url || !clientId || !clientSecret) {\n        throw new Error(\"Configure GDMS_OAUTH_URL, GDMS_CLIENT_ID e GDMS_CLIENT_SECRET.\");\n    }\n    const body = new URLSearchParams();\n    body.set(\"grant_type\", \"client_credentials\");\n    body.set(\"client_id\", clientId);\n    body.set(\"client_secret\", clientSecret);\n    const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body,\n        cache: \"no-store\"\n    });\n    if (!res.ok) {\n        const t = await res.text();\n        throw new Error(`OAuth token failed ${res.status}: ${t}`);\n    }\n    const json = await res.json();\n    const accessToken = json?.access_token ?? json?.token;\n    const ttlSec = json?.expires_in ?? 3600;\n    if (!accessToken) throw new Error(\"OAuth token response missing access_token\");\n    return {\n        accessToken,\n        expiresAt: now() + ttlSec * 1000\n    };\n}\n// Renova e persiste\nasync function refreshToken() {\n    const rec = await fetchClientCredentialsToken();\n    await saveToDb(rec);\n    return rec;\n}\n// Exposta para quem precisa do token\nasync function getAccessToken() {\n    // 1) memória ok?\n    if (mem.token && !willExpireSoon(mem.token.expiresAt)) return mem.token.accessToken;\n    // 2) DB\n    const dbTok = await loadFromDb();\n    if (dbTok && !willExpireSoon(dbTok.expiresAt)) {\n        mem.token = dbTok;\n        return dbTok.accessToken;\n    }\n    // 3) renovar via OAuth e salvar\n    const newTok = await refreshToken();\n    return newTok.accessToken;\n}\n// Opcional: force refresh via endpoint/admin\nasync function forceRefresh() {\n    return refreshToken();\n}\n// Para UI/monitorar (não expõe o token)\nasync function getTokenInfo() {\n    const dbTok = await loadFromDb();\n    const exp = dbTok?.expiresAt ?? 0;\n    return {\n        hasToken: !!dbTok,\n        expiresAt: exp,\n        expiresInSec: exp ? Math.max(0, Math.floor((exp - now()) / 1000)) : null\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gdmsToken.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        \"warn\",\n        \"error\"\n    ]\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUU5QyxNQUFNQyxrQkFBa0JDO0FBRWpCLE1BQU1DLFNBQ1hGLGdCQUFnQkUsTUFBTSxJQUN0QixJQUFJSCx3REFBWUEsQ0FBQztJQUNmSSxLQUFLO1FBQUM7UUFBUTtLQUFRO0FBQ3hCLEdBQUc7QUFFTCxJQUFJQyxJQUFxQyxFQUFFSixnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbnRlbm5hX21hcHMvLi9saWIvcHJpc21hLnRzPzk4MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XHJcblxyXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWwgYXMgdW5rbm93biBhcyB7IHByaXNtYT86IFByaXNtYUNsaWVudCB9O1xyXG5cclxuZXhwb3J0IGNvbnN0IHByaXNtYSA9XHJcbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA/P1xyXG4gIG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gICAgbG9nOiBbXCJ3YXJuXCIsIFwiZXJyb3JcIl1cclxuICB9KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XHJcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWwiLCJwcmlzbWEiLCJsb2ciLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./services/gdms.ts":
/*!**************************!*\
  !*** ./services/gdms.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listAPsByNetwork: () => (/* binding */ listAPsByNetwork),\n/* harmony export */   listAllAps: () => (/* binding */ listAllAps),\n/* harmony export */   listNetworks: () => (/* binding */ listNetworks)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_gdmsToken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/gdmsToken */ \"(rsc)/./lib/gdmsToken.ts\");\n// services/gdms.ts\n\n\nfunction env() {\n    const base = process.env.GDMS_BASE ?? \"https://www.gwn.cloud\";\n    const appId = process.env.GDMS_CLIENT_ID ?? process.env.GDMS_APP_ID ?? \"\";\n    const secret = process.env.GDMS_CLIENT_SECRET ?? process.env.GDMS_SECRET ?? \"\";\n    const pageSize = Number(process.env.GDMS_PAGE_SIZE ?? 200);\n    const show = process.env.GDMS_SHOW ?? \"all\";\n    if (!appId || !secret) throw new Error(\"Configure GDMS_CLIENT_ID e GDMS_CLIENT_SECRET (ou GDMS_APP_ID/GDMS_SECRET).\");\n    return {\n        base,\n        appId,\n        secret,\n        pageSize,\n        show\n    };\n}\nfunction sha256Hex(s) {\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"sha256\").update(s).digest(\"hex\");\n}\nfunction buildSignature(args) {\n    const bodyHash = sha256Hex(args.body);\n    const seed = `&access_token=${args.accessToken}&appID=${args.appId}&secretKey=${args.secret}&timestamp=${args.timestamp}&${bodyHash}&`;\n    return sha256Hex(seed);\n}\nasync function postJson(path, bodyObj) {\n    const { base, appId, secret } = env();\n    const accessToken = await (0,_lib_gdmsToken__WEBPACK_IMPORTED_MODULE_1__.getAccessToken)();\n    const body = JSON.stringify(bodyObj);\n    const ts = Date.now().toString();\n    const signature = buildSignature({\n        accessToken,\n        appId,\n        secret,\n        timestamp: ts,\n        body\n    });\n    const url = `${base}${path}?access_token=${accessToken}&appID=${appId}&timestamp=${ts}&signature=${signature}`;\n    const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body,\n        cache: \"no-store\"\n    });\n    let json;\n    try {\n        json = await res.json();\n    } catch  {\n        json = {\n            err: await res.text()\n        };\n    }\n    if (!res.ok) throw new Error(`GDMS ${path} ${res.status}: ${JSON.stringify(json).slice(0, 500)}`);\n    if (json?.retCode && String(json.retCode) !== \"0\") {\n        throw new Error(`GDMS ${path} retCode=${json.retCode} msg=${json.msg ?? \"\"}`);\n    }\n    return json;\n}\nfunction pickApId(ap) {\n    const cand = ap.id ?? ap.apId ?? ap.ap_id ?? ap.apID ?? ap.deviceId ?? ap.device_id ?? ap.mac ?? ap.MAC ?? ap.macAddr ?? ap.macAddress ?? ap.serialNumber ?? ap.sn ?? ap.SN ?? ap.uuid ?? ap.UUID;\n    if (cand === undefined || cand === null) return undefined;\n    const s = String(cand).trim();\n    return s.length ? s : undefined;\n}\nfunction pickLat(ap) {\n    return ap.ap_latitude ?? ap.latitude ?? ap.lat ?? ap.Latitude ?? ap.Lat ?? ap.gpsLatitude ?? ap.gpsLat ?? ap.gps?.latitude ?? ap.gps?.lat ?? ap.locationLatitude ?? ap.location?.latitude ?? ap.location?.lat ?? ap.position?.latitude ?? ap.position?.lat ?? undefined;\n}\nfunction pickLng(ap) {\n    return ap.ap_longitude ?? ap.longitude ?? ap.lng ?? ap.Longitude ?? ap.Lng ?? ap.gpsLongitude ?? ap.gpsLng ?? ap.gps?.longitude ?? ap.gps?.lng ?? ap.locationLongitude ?? ap.location?.longitude ?? ap.location?.lng ?? ap.position?.longitude ?? ap.position?.lng ?? undefined;\n}\nfunction shouldContinue(pageNum, pageSize, info) {\n    const { totalPage, total, received } = info;\n    if (typeof totalPage === \"number\" && totalPage > 0) return pageNum < totalPage;\n    if (typeof total === \"number\" && total > 0) return pageNum * pageSize < total;\n    return (received ?? 0) === pageSize;\n}\nasync function listNetworks() {\n    const { pageSize } = env();\n    let pageNum = 1;\n    const out = [];\n    while(true){\n        const body = {\n            search: \"\",\n            order: \"id\",\n            pageNum,\n            pageSize\n        };\n        const json = await postJson(\"/oapi/v1.0.0/network/list\", body);\n        const arr = json.data?.result ?? [];\n        for (const n of arr)out.push({\n            id: String(n.id),\n            networkName: n.networkName ?? \"\"\n        });\n        const totalPage = Number(json.data?.totalPage ?? 0) || undefined;\n        const total = Number(json.data?.total ?? 0) || undefined;\n        if (!shouldContinue(pageNum, pageSize, {\n            totalPage,\n            total,\n            received: arr.length\n        })) break;\n        pageNum++;\n    }\n    return out;\n}\nasync function listAPsByNetwork(nid, networkName) {\n    const { pageSize, show } = env();\n    let pageNum = 1;\n    const out = [];\n    while(true){\n        const body = {\n            search: \"\",\n            order: \"id\",\n            pageNum,\n            pageSize,\n            networkId: nid,\n            filter: {\n                showType: show\n            }\n        };\n        const json = await postJson(\"/oapi/v1.0.0/ap/list\", body);\n        const res = json.data?.result ?? [];\n        for (const ap of res){\n            const apId = pickApId(ap);\n            if (!apId) continue;\n            out.push({\n                networkId: nid,\n                networkName,\n                apId,\n                apName: ap.name ?? `AP-${apId}`,\n                status: (ap.status ?? 0) === 1 ? \"UP\" : \"DOWN\",\n                lat: pickLat(ap),\n                lng: pickLng(ap)\n            });\n        }\n        const totalPage = Number(json.data?.totalPage ?? 0) || undefined;\n        const total = Number(json.data?.total ?? 0) || undefined;\n        if (!shouldContinue(pageNum, pageSize, {\n            totalPage,\n            total,\n            received: res.length\n        })) break;\n        pageNum++;\n    }\n    return out;\n}\nasync function listAllAps() {\n    const nets = await listNetworks();\n    const all = [];\n    for (const n of nets){\n        const aps = await listAPsByNetwork(n.id, n.networkName ?? \"\");\n        all.push(...aps);\n    }\n    const seen = new Set();\n    const dedup = [];\n    for (const ap of all){\n        if (!seen.has(ap.apId)) {\n            seen.add(ap.apId);\n            dedup.push(ap);\n        }\n    }\n    return dedup;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./services/gdms.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&page=%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintegrations%2Fgdms%2Fsync%2Froute.ts&appDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjeferson.oliveira%5CDocuments%5CGitHub%5Cmonitoring_grandstream&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();